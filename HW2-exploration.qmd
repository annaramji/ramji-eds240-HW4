---
author: "Anna Ramji"
date: 2024-01-31
title: "Homework 2 Part 2"
---

**(Part 2a) This week, you’ll focus on importing / wrangling / and beginning the exploratory data visualization phase, using the data you found as part of [HW #1, Part II](https://samanthacsik.github.io/EDS-240-data-viz/assignments/HW1.html#part-ii-find-a-data-sets-that-interests-you). Complete the following:**

-   Create an file named, `HW2-exploration.qmd` within your `lastName-eds240-HW4` repo and add appropriate YAML fields

-   Load necessary packages and read in your data

```{r library, warning=FALSE, message=FALSE}
# load necessary packages
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                load packages                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

library("tidyverse") # for tidy everything! (data cleaning, wrangling)
library("here") # for reproducible file paths
library("janitor") # used to clean column names
library("naniar") # tools for exploring & handing missing data
library("ggridges") # {ggplot2} extension for creating ridgeline plots
library("ggbeeswarm") # {ggplot2} extension for creating categorical scatter (violin point) plots
library("scales") # provides the internal scaling infrastructure used by ggplot2, and gives you tools to override the default breaks, labels, transformations and palettes (installed automatically with {ggplot2} or {tidyverse})
library("calecopal") # used for custom plot theme
library("ggtext") # used for customizing plot text

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

agrifood_emissions <- read_csv(here("data", "Agrofood_co2_emission.csv"))

econ_freedom <- read_csv(here("data", "economic_freedom_quartile_1990_2020.csv"),
                         skip = 4) # the first few columns were not part of my intended dataset (cleaning while reading in)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                          data cleaning & wrangling                       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Agri-food CO2 emissions ----

# the column names are not tidy, so I'll start out by renaming them to lower_snake_case()
ag_clean <- agrifood_emissions |> 
  janitor::clean_names() |> 
# the column names are quite long, though informative, so I'll first select the columns/variables I'm most interested in...
  select(area, year, total_emission, average_temperature_c, urban_population, rural_population, rice_cultivation, crop_residues, pesticides_manufacturing, food_transport, agrifood_systems_waste_disposal, forestland, food_household_consumption, food_retail, food_packaging, savanna_fires, forest_fires, net_forest_conversion, drained_organic_soils_co2) |> 

# and then rename them to more easily referable titles 
  rename(country = area, 
         avg_temp_c = average_temperature_c,
         urban_pop = urban_population,
         rural_pop = rural_population,
         pesticide_manuf = pesticides_manufacturing,
         agfood_waste_disposal = agrifood_systems_waste_disposal,
         f_hh_consumption = food_household_consumption,
         net_forest_conv = net_forest_conversion,
         food_pack = food_packaging
         )  |> 
  
  # because I'm interested in plotting countries and years, I'll coerce the country data types to factor and year to a date
  mutate(country = as.factor(country),
         year = as.factor(year))




# Economic Freedom ----

# the economic freedom dataset has an extra empty column at the beginning, so I'll start by dropping that column and renaming the columns to lower_snake_case()
econ_clean <- econ_freedom |> 
  select(-...1) |> 
  janitor::clean_names() |> 

# there are lots of interesting columns in this dataset, but for now I'm only interested in a few for my data visualizations. I'll select and reorder them here:
  select(year, iso_code, countries, economic_freedom_summary_index, rank, quartile, tariffs)  |> 
  
  # next, I'll coerce the datatypes of year and countries to be factors, while updating the name of countries to country to match our agrifood emissions dataset and drop the old column
  mutate(year = as.factor(year),
         country = as.factor(countries)) |> 
  select(-countries)


# the country columns differ at many points... I'll need to clean these up before I can join the dataframes
unique(ag_clean$country)
unique(econ_clean$country)
```


-   Create at least **three** (but of course feel free to create more!) exploratory visualizations (similar to plot #1 and #2 in Part I of this assignment).

```{r exploratory-viz}



```


-   **IMPORTANT:** If you have a downloaded data file saved to your repo (e.g. you’re not reading in your data directly from online, from a server, etc.) be sure to add your data folder / file to your `.gitignore`, particularly if this file is large.

**(Part 2b) After completing the above steps, answer the following questions:**

-   **1.** What have you learned about your data? Have any potentially interesting patterns emerged? **(5-8 sentences)**

-   **2.** In HW #1, you outlined some questions that you wanted to answer using these data. Have you made any strides towards answering those questions? If yes, how so? If no, what next steps do you need to take (e.g. I need to create X plot type, I still need to track down Y data, I need to restructure existing data so that you can visualize it in Z ways, etc.)? **(8-12 sentences)**

-   **3.** What challenges do you foresee encountering with your data? These can be data wrangling and / or visualization challenges. **(4-6 sentences)**
