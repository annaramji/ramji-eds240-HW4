---
author: "Anna Ramji (she/her)"
date: 2024-01-31
title: "Homework 2 Part 2"
format:
  html:
    embed-resources: true
---

**(Part 2a) This week, you’ll focus on importing / wrangling / and beginning the exploratory data visualization phase, using the data you found as part of [HW #1, Part II](https://samanthacsik.github.io/EDS-240-data-viz/assignments/HW1.html#part-ii-find-a-data-sets-that-interests-you). Complete the following:**


My Data:

    Agri-food CO2 emission dataset - Forecasting ML (from Kaggle) <https://www.kaggle.com/datasets/alessandrolobello/agri-food-co2-emission-dataset-forecasting-ml>

    Economic Freedom Rankings (filtered date range 1990-2020) from the Frasier Institute's Economic Freedom page <https://www.fraserinstitute.org/economic-freedom/dataset?geozone=world&page=dataset&min-year=1990&max-year=2020&filter=2&most-free=1&quartile2=1&quartile3=1&least-free=1&date-type=range>



**"Agri-food CO2 emissions dataset – Forecasting ML" Variables:**

::: panel-tabset
## Summary

Many variables on emissions relating to the agrifood system, from crop cultivation and residue to food transportation and retail, as well as types of fires and soil-related emissions; year; country; demographic variables about urban, rural, and total population; average temperature (ºC)

## Some variable descriptions

-   Savanna fires: Emissions from fires in savanna ecosystems.
-   Forest fires: Emissions from fires in forested areas.
-   Crop Residues: Emissions from burning or decomposing leftover plant material after crop harvesting.
-   Rice Cultivation: Emissions from methane released during rice cultivation.
-   Drained organic soils (CO2): Emissions from carbon dioxide released when draining organic soils.
-   Pesticides Manufacturing: Emissions from the production of pesticides.
-   Food Transport: Emissions from transporting food products.
-   Forestland: Land covered by forests.
-   Net Forest conversion: Change in forest area due to deforestation and afforestation.
-   Food Household Consumption: Emissions from food consumption at the household level.
-   Food Retail: Emissions from the operation of retail establishments selling food.
-   On-farm Electricity Use: Electricity consumption on farms.
-   Food Packaging: Emissions from the production and disposal of food packaging materials.
-   Agrifood Systems Waste Disposal: Emissions from waste disposal in the agrifood system.
-   Food Processing: Emissions from processing food products.
-   Fertilizers Manufacturing: Emissions from the production of fertilizers.
-   IPPU: Emissions from industrial processes and product use.
-   Manure applied to Soils: Emissions from applying animal manure to agricultural soils.
-   Manure left on Pasture: Emissions from animal manure on pasture or grazing land.
-   Manure Management: Emissions from managing and treating animal manure.
-   Fires in organic soils: Emissions from fires in organic soils.
-   Fires in humid tropical forests: Emissions from fires in humid tropical forests.
-   On-farm energy use: Energy consumption on farms.
-   Rural population: Number of people living in rural areas.
-   Urban population: Number of people living in urban areas.
-   Total Population - Male: Total number of male individuals in the population.
-   Total Population - Female: Total number of female individuals in the population.
-   total_emission: Total greenhouse gas emissions from various sources.
-   Average Temperature °C: The average increasing of temperature (by year) in degrees Celsius.
:::


**Economic Freedom Dataset Variables:** overall rank, country name, year, overall score, size of government, legal systems & property rights, sound money, freedom to trade internationally, and regulation. Of these, I intend to use overall rank, country name, year, and overall score.

There is a lot of metadata linked in the "Methodology" section of the website <https://www.fraserinstitute.org/sites/default/files/uploaded/2022/economic-freedom-of-the-world-2022-appendix.pdf> which gives information on each variable, including how they were determined and methodology.


-   Create an file named, `HW2-exploration.qmd` within your `lastName-eds240-HW4` repo and add appropriate YAML fields

-   Load necessary packages and read in your data

```{r library, warning=FALSE, message=FALSE}
# load necessary packages
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                load packages                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

library("tidyverse") # for tidy everything! (data cleaning, wrangling)
library("here") # for reproducible file paths
library("janitor") # used to clean column names
library("naniar") # tools for exploring & handing missing data
library("ggridges") # {ggplot2} extension for creating ridgeline plots
library("ggbeeswarm") # {ggplot2} extension for creating categorical scatter (violin point) plots
library("scales") # provides the internal scaling infrastructure used by ggplot2, and gives you tools to override the default breaks, labels, transformations and palettes (installed automatically with {ggplot2} or {tidyverse})
library("calecopal") # used for custom plot theme
library("paletteer") # for custom palettes
library("ggtext") # used for customizing plot text
library("ggrepel") # to label lines in plot
library("viridis") # colorblind-friendly palette

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

agrifood_emissions <- read_csv(here("data", "Agrofood_co2_emission.csv"))

econ_freedom <- read_csv(here("data", "economic_freedom_quartile_1990_2020.csv"),
                         skip = 4) # the first few columns were not part of my intended dataset (cleaning while reading in)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                          data cleaning & wrangling                       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Agri-food CO2 emissions ----

# the column names are not tidy, so I'll start out by renaming them to lower_snake_case()
ag_clean <- agrifood_emissions |> 
  janitor::clean_names() |> 
  # the column names are quite long, though informative, so I'll first select the columns/variables I'm most interested in...
  select(area, year, total_emission, average_temperature_c, urban_population, rural_population, rice_cultivation, crop_residues, pesticides_manufacturing, food_transport, agrifood_systems_waste_disposal, forestland, food_household_consumption, food_retail, food_packaging, savanna_fires, forest_fires, net_forest_conversion, drained_organic_soils_co2, total_population_male, total_population_female) |> 
  
  # and then rename them to more easily referable titles 
  rename(country = area, 
         avg_temp_c = average_temperature_c,
         total_emissions = total_emission, # plurals are always so tricky to keep track of, but "emissions" feels more natural than "emission"
         urban_pop = urban_population,
         rural_pop = rural_population,
         pesticide_manuf = pesticides_manufacturing,
         agfood_waste_disposal = agrifood_systems_waste_disposal,
         f_hh_consumption = food_household_consumption,
         net_forest_conv = net_forest_conversion,
         food_pack = food_packaging)  |> 
  # adding a total population column
  mutate(total_pop = (total_population_male + total_population_female)) |> 
  # making a proportion column to theoretically compare/standardize emissions per capita
  mutate(emissions_per_capita = (total_emissions / total_pop))




# because I'm interested in plotting countries and years, I'll coerce the country data types to factor and year to a date
# mutate(country = as.factor(country),
#       year = as.factor(year))




# Economic Freedom ----

# the economic freedom dataset has an extra empty column at the beginning, so I'll start by dropping that column and renaming the columns to lower_snake_case()
econ_clean <- econ_freedom |> 
  select(-...1) |> 
  janitor::clean_names() |> 

# there are lots of interesting columns in this dataset, but for now I'm only interested in a few for my data visualizations. I'll select and reorder them here:
  select(year, iso_code, countries, economic_freedom_summary_index, rank, quartile, tariffs)  |> 
  
  # next, I'll coerce the datatypes of year and countries to be factors, while updating the name of countries to country to match our agrifood emissions dataset and drop the old column
#  mutate(year = as.factor(year),
 #        country = as.factor(countries)) |> 
  rename(country = countries) |> 
  
  # coercing quartile to factor
  mutate(quartile = as.factor(quartile)) |> 
  mutate(quartile = fct_relevel(quartile, sort))

# data exploration 
# the country columns differ at many points... I'll need to clean these up before I can join the dataframes
#setdiff(ag_clean$country, econ_clean$country)
#setdiff(econ_clean$country, ag_clean$country)


# updating country names for joining ----

#econ_renamed <- econ_clean |> 
  # option 1: mutate(across()) (this works, it could just be tedious)
#  mutate(across(country, str_replace, pattern = "Hong Kong SAR, China", replacement = "Hong Kong")) |> 
  

# rename function development ----
# I made a function but it doesn't actually save much space... oh well! 

rename_function <- function(df, column, old_name, new_name) {
  # using the specified dataframe
  df |> 
    # mutate across the specified column
    mutate(across(column,
                  str_replace, # use the str_replace function
                  pattern = old_name, # find the string pattern old_name
                  replacement = new_name)) # replace with new_name
}


test_rename_fxn <- rename_function(df = econ_clean, column = "country",  old_name = "Hong Kong SAR, China", new_name = "Hong Kong")

# renaming economic freedom countries ----

econ_renamed <- econ_clean |> 
  rename_function("country", "Hong Kong SAR, China", "Hong Kong") |> 
  rename_function("country", "China", "China (mainland)") |> 
  rename_function("country", "United States", "USA") |> 
  rename_function("country", "Bahamas, The", "Bahamas") |> 
  rename_function("country", "Venezuela, RB", "Venezuela") |> 
  rename_function("country", "Korea, Rep.", "Republic of Korea") |> 
  rename_function("country", "Congo, Dem. Rep.", "DRC") |> 
  rename_function("country", "Congo, Rep.", "Congo")

# renaming agri-food emissions countries ----

ag_renamed <- ag_clean |> 
  rename_function("country", "China, Hong Kong SAR", "Hong Kong") |> 
  rename_function("country", "China, Taiwan Province of", "Taiwan") |> 
  rename_function("country", "China, mainland", "China (mainland)") |> 
  rename_function("country", "United States of America", "USA") |> 
  rename_function("country", "Venezuela (Bolivarian Republic of)", "Venezuela") |> 
  rename_function("country", "Bolivia (Plurinational State of)", "Bolivia") |> # for some reason, this renaming line doesn't seem to work...
  rename_function("country", "United Kingdom of Great Britain and Northern Ireland", "United Kingdom") |> 
  rename_function("country", "Democratic Republic of the Congo", "DRC")




# joining datasets ----
ag_econ_join <- inner_join(ag_renamed, econ_renamed) |> 
  select(-iso_code)


# Create subsets ----

# agri-food emissions subsets 

# top emitters 
top_emitters <- ag_econ_join |> 
#  group_by(year, country) |> 
#  arrange(desc(total_emissions)) |> 
  filter(country %in% c("China (mainland)", "Indonesia", "Brazil", "USA", "India")) |> 
  mutate(label = if_else(year == max(year),
                         as.character(country), NA_character_)) # to label plot 
  

# top emitters per capita
top_per_cap <- ag_econ_join |> 
  group_by(year, country) |> 
  arrange(desc(emissions_per_capita)) |> 
  filter(country %in% c("Belize", "Botswana", "Guyana", "Suriname", "Trinidad and Tobago"))

usa_food <- ag_econ_join |> 
  filter(country %in% c("USA"))


emissions_2020 <- ag_econ_join |> 
  filter(year %in% c("2020"))

emissions_2020_grouped <- ag_econ_join |> 
  filter(year %in% c("2020")) |> 
  group_by(quartile)

top_emitters_2020 <- top_emitters |> 
  filter(year %in% c("2020"))

# Create economic freedom subset ----




econ_first_q <- econ_clean |> 
  filter(quartile == 1)

```


-   Create at least **three** (but of course feel free to create more!) exploratory visualizations (similar to plot #1 and #2 in Part I of this assignment).

```{r exploratory-viz}
# abandoned plots ----
# total CO2 emissions per country

# (incredibly messy)
# ggplot(data = ag_clean,
#        aes(x = country,
#            y = total_emission)) +
#   geom_point() +
#   coord_flip()

# ggplot(data = top_emitters_2020) +
#   geom_histogram(aes(x = total_emissions, fill = country), position = "dodge")

# ggplot(data = top_emitters_2020) +
#   geom_density_ridges(aes(x = total_emissions, y = quartile, fill = quartile)) +
#   scale_fill_viridis_d()

# main plots ----

# plot 1: USA emissions over time  ----

usa_emissions_plot <- ggplot(data = usa_food,
                             aes(x = year,
                                 y = total_emissions)) +
  # geom_point() +
  geom_line() +
  # rescaling y-axis to be more legible (than 2e+06, for example)
  scale_y_continuous(label = label_number(accuracy = 1, 
                                          scale = 0.000001, # millions
                                          suffix = "M")) +
  # updating labels, titles, theme
  labs(x = "Year", 
       y = "CO2 emissions (kilotons)",
       title = "Total agri-food CO2 emissions in the USA (1990-2020)",
       caption = "1 kiloton (kt) = 1000 kg") +
  theme_bw()

usa_emissions_plot


# plot 2.1: agrifood emissions over time ----

emissions_plot1 <- ggplot(data = top_emitters,
       aes(x = year,
           y = total_emissions)) +
#  geom_point(aes(color = country)) +
  geom_line(aes(color = country)) +
  # rescaling y-axis to be more legible
  scale_y_continuous(label = label_number(accuracy = 1,
                                          scale = 0.000001, # millions
                                          suffix = "M")) +
  
  # updating axes labels, legend and plot title, caption
  labs(y = "CO2 emissions (kilotons)",
       x = "Year",
       color = "Country",
       title = "Total agri-food CO2 emissions (1990-2020)",
       caption = "1 kiloton (kt) = 1000 kg") +
  theme_bw()


emissions_plot1

# note: add mean emissions per capita line

# run regression or series of regressions -- show statistical strength of ___
# break down trend lines -- facet wrap by country, 
# could also combine countries together, have single trend line, plot 1 trend line
# get rid of geom_line, keep scatter plot, one line, in general these countries combined have decreased 
# if there are reasons why they weren't measured in some years, make a note of that -- interactive, hover action w information
# note about why there's a spike at 2011
# change point shape
# point size -- population size -- bigger points for bigger pops, percentage of pop in urban areas, etc. 
# include slope, p-value, R-squared value
# 

# plot 2.2: agrifood emissions per capita over time ----
top_per_cap_plot <- ggplot(data = top_per_cap,
       aes(x = year,
           y = emissions_per_capita)) +
  # point and line plots, colored by country
  geom_point(aes(color = country)) +
  geom_line(aes(color = country)) +
  # scale_y_continuous(label = label_number(accuracy = 1,
  #                                         scale = 0.000001,
  #                                         suffix = "M")) +
  
  # updating axes labels, legend and plot title, caption
  labs(y = "Emissions per capita (CO2 kt)",
       x = "Year",
       color = "Country",
       title = "Total agri-food CO2 emissions per capita (1990-2020)",
       # subtitle: "Top 5 emitters per capita" # I added this in post-discussion iterations of this visualization 
       caption = "1 kiloton (kt) = 1000 kg") +
  theme_bw()


top_per_cap_plot


# economic freedom quartile x agri-food CO2 emissions ----


econ_emissions_plot1 <- ggplot(data = top_emitters, aes(x = year,
                                     y = emissions_per_capita)) +
  # grouping by country (doesn't do much unless you have more countries, but I'm trying to avoid spaghetti plots), coloring by quartile
  geom_line(aes(group = country, color = quartile),
            linewidth = 0.9) +
  # labelling each country 
  geom_label_repel(aes(label = label), # defined when I made my top_emitters subset earlier
                  nudge_x = 7,
                  na.rm = TRUE) + 
  scale_color_viridis_d() + 
#   scale_color_paletteer_d(palette = "ggprism::viridis", direction = -1) + 
#  scale_color_manual(values = calecopal::cal_palette("superbloom3")) +
  # updating axes labels, title, legend title
  labs(x = "Year",
       y = "Emissions per capita (CO2 kt)",
       color = "Quartile",
       title = "Emissions per capita over time, colored by Economic Freedom Quartile") + 
  theme_bw() 

# view plot
econ_emissions_plot1

# labelled following https://stackoverflow.com/questions/29357612/plot-labels-at-ends-of-lines top answer


# plot 4: ridgeline plot of emissions per quartile in 2020

ggplot(data = emissions_2020_grouped) +
  geom_density_ridges(aes(x = total_emissions, 
                          y = quartile,
                          fill = quartile)) + # coloring by quartile
  scale_fill_viridis_d() + # colorblind-friendly palette
  guides(fill = "none") + # removing unnecessary legend
  theme_bw()



```


-   **IMPORTANT:** If you have a downloaded data file saved to your repo (e.g. you’re not reading in your data directly from online, from a server, etc.) be sure to add your data folder / file to your `.gitignore`, particularly if this file is large.

**(Part 2b) After completing the above steps, answer the following questions:**

-   **1.** What have you learned about your data? Have any potentially interesting patterns emerged? **(5-8 sentences)**


In general cleaning of my agrifood emissions dataset, I realized that there was a lot of missing data in columns beyond a few key ones, so I decided to stick with total emissions and temperature when comparing most countries. 

I spent over 6 hours trying to figure out how to clean and wrangle my datasets, and around 4 hours making visualizations. Overall, I'm frustrated with how long everything took, only to leave me with the sense that the best visualization forms for comparing emissions over time were line plots. That being said, trying out different visualization forms helped me to reach this conclusion, and that there are a few countries that produce extremely more than others (especially China). However, when those emissions numbers are standardized by creating an emissions per capita variable, the top emitters were surprising ("Belize", "Botswana", "Guyana", "Suriname", "Trinidad and Tobago"). There are potentially interesting patterns in Brazil's emissions, as they seem to plummet after 2011 and I haven't figured out why. Additionally, I'd like to spend more time in the future on visualizing other variables of my data but ran out of time for this assignment. 




-   **2.** In HW #1, you outlined some questions that you wanted to answer using these data. Have you made any strides towards answering those questions? If yes, how so? If no, what next steps do you need to take (e.g. I need to create X plot type, I still need to track down Y data, I need to restructure existing data so that you can visualize it in Z ways, etc.)? **(8-12 sentences)**


Part 2 answer from HW1: *"I am interested in investigating (and visualizing) the relationship between different emissions variables per country over time, emphasizing the highest and lowest emitters/producers, and how this may relate to change in average annual temperature (º Celsius), as well as economic freedom score or quartile of each country."*

In this assignment, I have visualized total emissions and emissions per capita over time, grouped by economic freedom quartile. I have not, however, incorporated average temperature, or visualized a combination of the lowest and highest emitters or EF quartile rankings in one plot.

A huge issue that came up when cleaning and wrangling my data was the discrepancy between country names and classifications. Using the `setdiff()` function, I found that there were over 120 differences in how the countries were named. This was especially challenging with China, as the discrepancies between naming and classifying Macau (which didn't exist in the economic freedom dataset, but was classified separately in the agrifood emissions dataset), Hong Kong and Taiwan (which were both classified separately and differently in the datasets), were quite different but also important as they were ranked very differently in terms of economic freedom quartiles and emissions rates. Macao's emissions were relatively low across the board, but they also seemed to be included as part of China for the econ dataset, so for comparison and visualization's sake, I left them out of the "China, mainland" classification for the agrifood dataset and just had Taiwan and Hong Kong as separate countries. In the agrifood set, "China" seemed to be an aggregation of mainland China, Hong Kong, Taiwan, and Macao. The Economic Freedom dataset is also missing a lot of countries (potentially intentionally, or due to inability to get valid data) including North Korea (Democratic People's Republic of Korea), Cuba, and Afghanistan. Overall, I decided to rename countries of interest (high emitters or ranked in higher or lower EF quartiles) using a renaming function that I created, and performed a left join. 

I think I can make more subsets to combat the visualization challenges that come with working with so much data. I have already made a few by top emitters (total and per capita) and grouping by different variables (year, quartile).





-   **3.** What challenges do you foresee encountering with your data? These can be data wrangling and / or visualization challenges. **(4-6 sentences)**


I partially answered this above, and didn't realize that we weren't supposed to spend this much time wrangling our data. I guess I feel like I'm behind in terms of visualization diversity but ahead in terms of wrangling? Thus, I forsee there being challenges with visualizing multiple categorical and numerical variables in a single plot (ideally also showing more than 5 countries) without it becoming a spaghetti plot. I would love advice or recommendations for plots beyond line plots, or suggestions for ways I can transform my data to make more interesting visualizations. As many of the countries have shifts in their economic freedom quartile rankings over time, I forsee visualizing this as being a challenge, as the colors can become messy and confusing when plotting that change along with other variables such as total emissions or average temperature. 
